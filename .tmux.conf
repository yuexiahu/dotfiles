# C-q 前缀键
set -g prefix C-q
unbind C-b
bind C-q send-prefix
set-option -g repeat-time 400
set-option -g set-titles on
set-option -g set-titles-string "[#S] #I:#W#F"

# r:重载配置
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# |\:横向分屏 -:纵向分屏
unbind '"'
bind - splitw -v -c '#{pane_current_path}'
unbind %
bind '\' splitw -h -c '#{pane_current_path}'
bind | splitw -h -c '#{pane_current_path}'

# 鼠标支持
setw -g mouse on

# 焦点事件开启，增强vim插件
set -g focus-events on

# 绑定Alt+h/j/k/l键为面板切换的上下左右键
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D
# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
#
bind k select-pane -U # 绑定k为↑
bind j select-pane -D # 绑定j为↓
bind h select-pane -L # 绑定h为←
bind l select-pane -R # 绑定l为→
#
# # 绑定Ctrl+Alt+h/j/k/l键为面板移动的上下左右键
# bind -n C-M-h select-pane -L \; swap-pane -s '!' \; select-pane -R
# bind -n C-M-k swap-pane -U
# bind -n C-M-j swap-pane -D
# bind -n C-M-l select-pane -R \; swap-pane -s '!' \; select-pane -L

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind-key -n C-M-h if-shell "$is_vim" 'send-keys C-M-h' 'resize-pane -L 3'
bind-key -n C-M-j if-shell "$is_vim" 'send-keys C-M-j' 'resize-pane -D 3'
bind-key -n C-M-k if-shell "$is_vim" 'send-keys C-M-k' 'resize-pane -U 3'
bind-key -n C-M-l if-shell "$is_vim" 'send-keys C-M-l' 'resize-pane -R 3'

bind-key -n C-left if-shell "$is_vim" 'send-keys C-left' 'resize-pane -L 3'
bind-key -n C-down if-shell "$is_vim" 'send-keys C-down' 'resize-pane -D 3'
bind-key -n C-up if-shell "$is_vim" 'send-keys C-up' 'resize-pane -U 3'
bind-key -n C-right if-shell "$is_vim" 'send-keys C-right' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R

# 绑定Alt+n/p键为窗口切换
bind -n M-n next-window
bind -n M-p previous-window

# kill-pane 无需确认
bind x kill-pane
bind q set -g status

# save buffer to file
bind S command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
setw -g mode-keys vi
# 绑定v键为开始选择文本
bind -T copy-mode-vi v send-keys -X begin-selection
# 绑定Esc键为退出拷贝状态
bind -T copy-mode-vi Escape send-keys -X cancel
# 绑定y键为复制选中文本到系统剪贴板，需要安装xclip
if-shell -b '[ -z "$WSLENV" ]' 'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection c"'
if-shell -b '[ -z "$WSLENV" ]' 'bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -selection c"'
# 绑定y键为复制选中文本到系统剪贴板，需要wsl
if-shell -b '[ ! -z "$WSLENV" ]' 'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "win32yank.exe -i --crlf"'
if-shell -b '[ ! -z "$WSLENV" ]' 'bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "win32yank.exe -i --crlf"'

# 窗格从1开始计数，方便按
set -g base-index 1

# 无斜体
# set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",*256col*:Tc"
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# 斜体
# ssh产生问题 https://github.com/gpakosz/.tmux/issues/559
# 解决方法,在~/.ssh/config 添加 SetEnv TERM=screen-256color
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# 状态栏
# 颜色
# set -g status-bg '#181825'
# set -g status-fg '#cdd6f4'
# # 对齐方式
# set-option -g status-justify left
# # 左下角
# set-option -g status-left '#[fg=##89b4fa]【#S】'
# set-option -g status-left-length 20
# # 窗口列表
# setw -g automatic-rename on
# set-window-option -g window-status-format '#[fg=#cdd6f4]#I:#W '
# set-window-option -g window-status-current-format '#[fg=#f9e2af,bold]#I:#W#F'
# # 右下角
# set -g status-right '#[fg=##89b4fa]【%Y-%m-%d %H:%M:%S】'

# Fix https://github.com/microsoft/WSL/issues/5931
set -sg escape-time 1

# List of plugins
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_window_tabs_enabled on # or off to disable window_tabs
set -g @catppuccin_date_time "%Y-%m-%d %H:%M"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
run '~/.tmux/plugins/tpm/tpm'
